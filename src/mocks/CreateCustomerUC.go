// Code generated by mockery v2.30.16. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	dto "lucio.com/order-service/src/dto"
)

// CreateCustomerUC is an autogenerated mock type for the CreateCustomerUC type
type CreateCustomerUC struct {
	mock.Mock
}

// Execute provides a mock function with given fields: createCustomerDTO
func (_m *CreateCustomerUC) Execute(createCustomerDTO dto.CreateCustomerDTO) (*dto.CreatedCustomerDTO, error) {
	ret := _m.Called(createCustomerDTO)

	var r0 *dto.CreatedCustomerDTO
	var r1 error
	if rf, ok := ret.Get(0).(func(dto.CreateCustomerDTO) (*dto.CreatedCustomerDTO, error)); ok {
		return rf(createCustomerDTO)
	}
	if rf, ok := ret.Get(0).(func(dto.CreateCustomerDTO) *dto.CreatedCustomerDTO); ok {
		r0 = rf(createCustomerDTO)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*dto.CreatedCustomerDTO)
		}
	}

	if rf, ok := ret.Get(1).(func(dto.CreateCustomerDTO) error); ok {
		r1 = rf(createCustomerDTO)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewCreateCustomerUC creates a new instance of CreateCustomerUC. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCreateCustomerUC(t interface {
	mock.TestingT
	Cleanup(func())
}) *CreateCustomerUC {
	mock := &CreateCustomerUC{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
