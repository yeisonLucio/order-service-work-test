// Code generated by mockery v2.30.16. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	dto "lucio.com/order-service/src/dto"
)

// UpdateWorkOrderUC is an autogenerated mock type for the UpdateWorkOrderUC type
type UpdateWorkOrderUC struct {
	mock.Mock
}

// Execute provides a mock function with given fields: updateWorkOrder
func (_m *UpdateWorkOrderUC) Execute(updateWorkOrder dto.UpdateWorkOrder) (*dto.UpdatedWorkOrder, error) {
	ret := _m.Called(updateWorkOrder)

	var r0 *dto.UpdatedWorkOrder
	var r1 error
	if rf, ok := ret.Get(0).(func(dto.UpdateWorkOrder) (*dto.UpdatedWorkOrder, error)); ok {
		return rf(updateWorkOrder)
	}
	if rf, ok := ret.Get(0).(func(dto.UpdateWorkOrder) *dto.UpdatedWorkOrder); ok {
		r0 = rf(updateWorkOrder)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*dto.UpdatedWorkOrder)
		}
	}

	if rf, ok := ret.Get(1).(func(dto.UpdateWorkOrder) error); ok {
		r1 = rf(updateWorkOrder)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewUpdateWorkOrderUC creates a new instance of UpdateWorkOrderUC. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUpdateWorkOrderUC(t interface {
	mock.TestingT
	Cleanup(func())
}) *UpdateWorkOrderUC {
	mock := &UpdateWorkOrderUC{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
