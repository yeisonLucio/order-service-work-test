// Code generated by mockery v2.30.16. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	dto "lucio.com/order-service/src/dto"
)

// CreateWorkOrderUC is an autogenerated mock type for the CreateWorkOrderUC type
type CreateWorkOrderUC struct {
	mock.Mock
}

// Execute provides a mock function with given fields: createWorkOrderDTO
func (_m *CreateWorkOrderUC) Execute(createWorkOrderDTO dto.CreateWorkOrderDTO) (*dto.CreatedWorkOrderDTO, error) {
	ret := _m.Called(createWorkOrderDTO)

	var r0 *dto.CreatedWorkOrderDTO
	var r1 error
	if rf, ok := ret.Get(0).(func(dto.CreateWorkOrderDTO) (*dto.CreatedWorkOrderDTO, error)); ok {
		return rf(createWorkOrderDTO)
	}
	if rf, ok := ret.Get(0).(func(dto.CreateWorkOrderDTO) *dto.CreatedWorkOrderDTO); ok {
		r0 = rf(createWorkOrderDTO)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*dto.CreatedWorkOrderDTO)
		}
	}

	if rf, ok := ret.Get(1).(func(dto.CreateWorkOrderDTO) error); ok {
		r1 = rf(createWorkOrderDTO)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewCreateWorkOrderUC creates a new instance of CreateWorkOrderUC. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCreateWorkOrderUC(t interface {
	mock.TestingT
	Cleanup(func())
}) *CreateWorkOrderUC {
	mock := &CreateWorkOrderUC{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
