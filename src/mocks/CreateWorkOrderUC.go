// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	commondtos "lucio.com/order-service/src/domain/common/dtos"

	dtos "lucio.com/order-service/src/domain/workorder/dtos"

	entities "lucio.com/order-service/src/domain/workorder/entities"

	mock "github.com/stretchr/testify/mock"
)

// CreateWorkOrderUC is an autogenerated mock type for the CreateWorkOrderUC type
type CreateWorkOrderUC struct {
	mock.Mock
}

// Execute provides a mock function with given fields: createWorkOrderDTO
func (_m *CreateWorkOrderUC) Execute(createWorkOrderDTO entities.WorkOrder) (*dtos.CreatedWorkOrderResponse, *commondtos.CustomError) {
	ret := _m.Called(createWorkOrderDTO)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 *dtos.CreatedWorkOrderResponse
	var r1 *commondtos.CustomError
	if rf, ok := ret.Get(0).(func(entities.WorkOrder) (*dtos.CreatedWorkOrderResponse, *commondtos.CustomError)); ok {
		return rf(createWorkOrderDTO)
	}
	if rf, ok := ret.Get(0).(func(entities.WorkOrder) *dtos.CreatedWorkOrderResponse); ok {
		r0 = rf(createWorkOrderDTO)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*dtos.CreatedWorkOrderResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(entities.WorkOrder) *commondtos.CustomError); ok {
		r1 = rf(createWorkOrderDTO)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*commondtos.CustomError)
		}
	}

	return r0, r1
}

// NewCreateWorkOrderUC creates a new instance of CreateWorkOrderUC. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCreateWorkOrderUC(t interface {
	mock.TestingT
	Cleanup(func())
}) *CreateWorkOrderUC {
	mock := &CreateWorkOrderUC{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
